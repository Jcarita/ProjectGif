{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","protoTypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","console","log","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAc9C,OACI,sBAAMC,SARM,SAACC,GACbA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,GAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,QAK1C,SACI,uBACIC,KAAK,OACLC,MAAQT,EACRU,SAfc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,aAmB/BZ,EAAYe,WAAa,CACrBd,c,OAAee,EAAUC,KAAKC,Y,mCCzBrBC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCCPO,EAAc,SAAC,GAAqB,EAAnBJ,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAInC,OACI,sBAAKc,UAAU,yBAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,4BAAIA,QCLHO,EAAU,SAAC,GAAiB,IAAfnB,EAAc,EAAdA,SAAc,ECFZ,SAAEA,GAAe,IAAD,EACdlB,mBAAS,CAC/ByB,KAAK,GACLa,SAAQ,IAH4B,mBACjCC,EADiC,KAC1BC,EAD0B,KAwBxC,OAlBAC,qBAAW,WACRxB,EAASC,GACJwB,MAAM,SAAAC,GACHC,YAAY,WACRJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEf,UAEV,CAAEpB,IAQEqB,EDnBmBM,CAAc3B,GAAhCO,EAH4B,EAG5BA,KAAMa,EAHsB,EAGtBA,QASd,OARAQ,QAAQC,MASJ,qCACI,6BAAM7B,IACLoB,GAAW,yCACZ,qBAAKJ,UAAU,YAAf,SAGQT,EAAKE,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAESA,GADAA,EAAIC,aEtBxBmB,EAAe,WAAO,IAAD,EAGMhD,mBAAS,CAAC,KAHhB,mBAGvBiD,EAHuB,KAGXlD,EAHW,KAS9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAcA,cAAgBA,IAC9B,uBACA,6BAEIkD,EAAWtB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MChB9BgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.d190edb9.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ( {setCategories} ) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) =>{\r\n        setInputValue(e.target.value )\r\n    }\r\n    const submith = (e) => {\r\n        e.preventDefault()\r\n        if (inputValue.trim().length > 1){\r\n            setCategories( cats => [inputValue,...cats])\r\n        }\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={ submith }>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n                />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.protoTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async ( category )=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=T8XNwhFaH5lXYaRjqAf7hWu4LOQIpkEe`\r\n    const resp = await fetch(url)\r\n    const { data } = await resp.json()\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n}","import React from 'react';\r\n\r\n\r\nexport const GifGridItem = ( {id,title,url} ) => {\r\n\r\n    //console.log({id,title,url})\r\n\r\n    return(\r\n        <div className=\"card animate__bounceIn\">\r\n            <img src={ url } alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\r\nimport {GifGridItem} from \"./GifGridItem\";\r\n//import {getGifs} from \"../helpers/getGifs\";\r\n\r\nexport const GifGrid = ({ category }) =>{\r\n\r\n    //const [images, setImages] = useState([]);\r\n    const { data, loading } = useFetchGifs( category );\r\n    console.log()\r\n    /*useEffect( () => {\r\n        getGifs( category )\r\n            .then( setImages )\r\n    }, [ category ])*/\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n            <h3>{ category }</h3>\r\n            {loading && <p>Cargando</p>}\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    data.map( img  => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            { ...img }\r\n                        />\r\n\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import {useEffect, useState} from 'react';\r\nimport {getGifs} from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState ]= useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect( () => {\r\n       getGifs( category )\r\n           .then( imgs => {\r\n               setTimeout( ()=>{\r\n                   setState({\r\n                       data: imgs,\r\n                       loading: false\r\n                   })\r\n               },3000)\r\n           })\r\n    }, [ category ])\r\n\r\n    /*setTimeout( ()=>{\r\n        setState({\r\n            data: [1,2,3,4,5,6],\r\n            loading: false\r\n        },3000);\r\n    })*/\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n\r\n    const [categorias, setCategories] = useState(['']);\r\n\r\n/*    const agregar = () => {\r\n        setCategories( cats => [...cats,'hola'] );\r\n    }\r\n */\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory  setCategories={ setCategories}/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                categorias.map( category => (\r\n                    <GifGrid\r\n                        key={ category }\r\n                        category={ category}\r\n                    />\r\n                ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}